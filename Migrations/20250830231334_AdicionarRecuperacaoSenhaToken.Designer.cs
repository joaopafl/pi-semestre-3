// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pi_Odonto.Data;

#nullable disable

namespace Pi_Odonto.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250830231334_AdicionarRecuperacaoSenhaToken")]
    partial class AdicionarRecuperacaoSenhaToken
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Pi_Odonto.Models.Crianca", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_crianca");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("varchar(11)")
                        .HasColumnName("cpf_crianca");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("dt_nasc_crianca");

                    b.Property<int>("IdResponsavel")
                        .HasColumnType("int")
                        .HasColumnName("id_resp");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nome_crianca");

                    b.Property<string>("Parentesco")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("parentesco");

                    b.HasKey("Id");

                    b.HasIndex("IdResponsavel");

                    b.ToTable("crianca", (string)null);
                });

            modelBuilder.Entity("Pi_Odonto.Models.RecuperacaoSenhaToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataExpiracao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<bool>("Usado")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.ToTable("RecuperacaoSenhaTokens", (string)null);
                });

            modelBuilder.Entity("Pi_Odonto.Models.Responsavel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_resp");

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("ativo");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("cpf_resp");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("data_cadastro");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("email_resp");

                    b.Property<bool>("EmailVerificado")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("email_verificado");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("varchar(60)")
                        .HasColumnName("endereco_resp");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nome_resp");

                    b.Property<string>("Senha")
                        .HasColumnType("longtext")
                        .HasColumnName("senha_resp");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("tel_resp");

                    b.Property<string>("TokenVerificacao")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("token_verificacao");

                    b.HasKey("Id");

                    b.ToTable("responsavel", (string)null);
                });

            modelBuilder.Entity("Pi_Odonto.Models.Crianca", b =>
                {
                    b.HasOne("Pi_Odonto.Models.Responsavel", "Responsavel")
                        .WithMany("Criancas")
                        .HasForeignKey("IdResponsavel")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Responsavel");
                });

            modelBuilder.Entity("Pi_Odonto.Models.Responsavel", b =>
                {
                    b.Navigation("Criancas");
                });
#pragma warning restore 612, 618
        }
    }
}
