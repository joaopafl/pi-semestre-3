@model Pi_Odonto.ViewModels.AppointmentViewModel
@{
    ViewBag.Title = "Agendamento de Consulta Odontol√≥gica";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link rel="stylesheet" href="~/css/Agendamento.css" asp-append-version="true" />
<div class="card-wp">
    <h1 class="page-title">Agendamento de Consulta Odontol√≥gica <span class="calendar-emoji">üìÖ</span></h1>

    <form method="post" asp-action="Confirmar" asp-controller="Agendamento" id="agendamentoForm">
        <h3>Selecione a crian√ßa a ser atendida:</h3>
        <div class="select-row">
            <select name="selectedChildId" id="childSelect" class="styled-select" onchange="enableDates()">
                <option value="">Selecione uma crian√ßa</option>
                @foreach(Crianca c in Model.Children)
                {
                    <option value="@c.Id" data-name="@c.Nome">@c.Nome</option>
                }
            </select>
        </div>

        <div id="datesSection" style="display:none;">
            <h3>Selecione o dia do atendimento:</h3>
            <div class="dates-row">
                @foreach(var d in Model.AvailableSaturdays)
                {
                    <button type="button" class="date-btn" onclick="selectDateAndShowTimes('@d.ToString("yyyy-MM-dd")', this)">@d.ToString("dd/MM")</button>
                }
            </div>
        </div>

        <div id="timesSection" style="display:none;">
            <h3>Selecione o hor√°rio do atendimento:</h3>
            <div class="times-grid">
                </div>
        </div>
        
        <input type="hidden" name="SelectedDate" id="dateInput" />
        <input type="hidden" name="SelectedTime" id="timeInput" />
    </form>
    
    @if(TempData["ErrorMessage"] != null)
    {
        <div class="error" style="color: red; font-weight: bold; margin-top: 15px;">@TempData["ErrorMessage"]</div>
    }
</div>


<div class="modal fade" id="summaryModal" tabindex="-1" aria-labelledby="summaryModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content" style="border-radius: 12px;">
            <div class="modal-header" style="background-color: var(--green-main); color: white; border-radius: 12px 12px 0 0;">
                <h5 class="modal-title" id="summaryModalLabel">
                    <span class="calendar-emoji">üìÖ</span> Resumo do Agendamento
                </h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="summary-details" style="text-align: left;">
                    <p><span class="sq-icon"></span> <strong>Crian√ßa selecionada:</strong> <span id="summaryChildNameModal"></span></p>
                    <p><span class="sq-icon"></span> <strong>Respons√°vel:</strong> Ana Silva</p>
                    <p><span class="sq-icon"></span> <strong>Dentista:</strong> Dr. Jo√£o Oliveira</p>
                    <hr>
                    <p style="font-size: 1.2rem;"><span class="sq-icon" style="background-color: var(--blue-main);"></span> <strong>Data:</strong> <span id="summaryDateModal" style="font-weight: bold;"></span></p>
                    <p style="font-size: 1.2rem;"><span class="sq-icon" style="background-color: var(--blue-main);"></span> <strong>Hor√°rio:</strong> <span id="summaryTimeModal" style="font-weight: bold;"></span></p>
                </div>
            </div>
            <div class="modal-footer actions" style="justify-content: space-around; border-top: none;">
                <button type="button" class="confirm-btn" onclick="confirmAndSubmit()">Confirmar agendamento</button>
                <button type="button" class="btn-outline" data-bs-dismiss="modal">Revisar</button>
            </div>
        </div>
    </div>
</div>


@section Scripts {
    <script>
        // A lista de hor√°rios simulados (mock)
        const availableTimes = ["08:00", "09:00", "10:00", "11:00", "13:00", "14:00"];
        
        // As vari√°veis para armazenar os valores de exibi√ß√£o
        let selectedDateDisplay = ''; // Agora essa vari√°vel ser√° preenchida corretamente
        let selectedChildName = '';

        // Vari√°vel para controlar o modal
        const summaryModal = new bootstrap.Modal(document.getElementById('summaryModal'));


        function enableDates() {
            const childSelect = document.getElementById('childSelect');
            const datesSection = document.getElementById('datesSection');
            const timesSection = document.getElementById('timesSection');
            
            selectedChildName = childSelect.options[childSelect.selectedIndex]?.dataset.name || '';
            
            if (childSelect.value !== "") {
                datesSection.style.display = 'block';
            } else {
                datesSection.style.display = 'none';
                timesSection.style.display = 'none';
                summaryModal.hide(); 
            }
        }

        function selectDateAndShowTimes(selectedDate, button) {
            // Limpa o estado 'selected' dos bot√µes de data
            document.querySelectorAll('.dates-row .date-btn').forEach(btn => btn.classList.remove('selected'));
            button.classList.add('selected');

            // 1. SALVA O VALOR DA DATA DO FORMATO YYYY-MM-DD NO INPUT OCULTO
            document.getElementById('dateInput').value = selectedDate;

            // 2. CORRE√á√ÉO CRUCIAL: SALVA O TEXTO DO BOT√ÉO (EX: "15/10") NA VARI√ÅVEL DE EXIBI√á√ÉO
            selectedDateDisplay = button.textContent; 
            
            const timesGrid = document.querySelector('.times-grid');
            timesGrid.innerHTML = '';
            
            // Preenche o grid com os hor√°rios dispon√≠veis (Mock)
            availableTimes.forEach(time => {
                const timeButton = document.createElement('button');
                timeButton.type = 'button'; 
                timeButton.className = 'time-btn';
                timeButton.textContent = time;
                timeButton.onclick = () => showSummaryModal(time, timeButton);
                timesGrid.appendChild(timeButton);
            });
            
            document.getElementById('timesSection').style.display = 'block';
            summaryModal.hide();
        }
        
        function showSummaryModal(timeValue, button) {
            document.querySelectorAll('.times-grid .time-btn').forEach(btn => btn.classList.remove('selected'));
            button.classList.add('selected');
            
            // Preenche os inputs ocultos para o Controller
            document.getElementById('timeInput').value = timeValue;
            
            // Preenche os detalhes no modal, USANDO A VARI√ÅVEL CORRIGIDA
            document.getElementById('summaryChildNameModal').textContent = selectedChildName;
            document.getElementById('summaryDateModal').textContent = selectedDateDisplay; 
            document.getElementById('summaryTimeModal').textContent = timeValue;
            
            summaryModal.show();
        }

        function confirmAndSubmit() {
            summaryModal.hide();
            document.getElementById('agendamentoForm').submit();
        }

        enableDates();
    </script>
}