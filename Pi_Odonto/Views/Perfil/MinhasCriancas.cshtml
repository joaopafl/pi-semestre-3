@model IEnumerable<Pi_Odonto.Models.Crianca>
@{
    ViewData["Title"] = ViewBag.IsAdmin == true ? "Gerenciar Crianças" : "Minhas Crianças";
    var isAdmin = ViewBag.IsAdmin == true;
    var responsavelNome = ViewBag.ResponsavelNome as string;
}
<style>
    * {
        box-sizing: border-box;
    }

    .container {
        max-width: 1300px;
        margin: 0 auto;
        padding: 15px;
    }

    .header {
        background: #17a2b8;
        color: white;
        padding: 15px 20px;
        border-radius: 8px;
        margin-bottom: 20px;
        display: flex;
        justify-content: space-between;
        align-items: center;
        flex-wrap: wrap;
        gap: 15px;
    }

        .header h1 {
            margin: 0;
            font-size: 1.5rem;
        }

    .header-buttons {
        display: flex;
        gap: 10px;
        flex-wrap: wrap;
    }

    .crianca-card {
        border: 1px solid #ddd;
        border-radius: 8px;
        padding: 16px;
        background: white;
        box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        position: relative;
        height: 220px;
        display: flex;
        flex-direction: column;
        justify-content: space-between;
    }

        .crianca-card.inativa {
            background: #f8f9fa;
            border-color: #dee2e6;
            opacity: 0.75;
        }

    .crianca-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
        gap: 16px;
        margin-bottom: 20px;
    }

    .crianca-header {
        color: #17a2b8;
        margin: 0 0 12px 0;
        font-size: 1.1rem;
        display: flex;
        align-items: center;
        justify-content: space-between;
    }

        .crianca-header.inativa {
            color: #6c757d;
        }

    .crianca-info {
        margin-bottom: 6px;
        font-size: 0.9rem;
        line-height: 1.3;
    }

    .crianca-content {
        flex-grow: 1;
    }

    .crianca-actions {
        display: flex;
        gap: 6px;
        flex-wrap: wrap;
        padding-top: 10px;
        border-top: 1px solid #eee;
    }

    .btn {
        padding: 6px 12px;
        text-decoration: none;
        border-radius: 4px;
        display: inline-block;
        border: none;
        cursor: pointer;
        font-size: 0.85rem;
        font-weight: 500;
    }

    .btn-primary {
        background: #007bff;
        color: white;
    }

    .btn-warning {
        background: #ffc107;
        color: black;
    }

    .btn-info {
        background: #17a2b8;
        color: white;
    }

    .btn-secondary {
        background: #6c757d;
        color: white;
    }

    .btn-danger {
        background: #dc3545;
        color: white;
    }

    .btn-success {
        background: #28a745;
        color: white;
    }

    .status-badge {
        padding: 3px 8px;
        border-radius: 12px;
        font-size: 0.7rem;
        font-weight: bold;
    }

    .status-ativa {
        background: #d4edda;
        color: #155724;
    }

    .status-inativa {
        background: #f8d7da;
        color: #721c24;
    }

    .filtros {
        background: #f8f9fa;
        padding: 12px 16px;
        border-radius: 8px;
        margin-bottom: 20px;
        display: flex;
        align-items: center;
        gap: 15px;
        flex-wrap: wrap;
    }

        .filtros label {
            display: flex;
            align-items: center;
            gap: 5px;
            cursor: pointer;
            font-size: 0.9rem;
        }

    .summary {
        background: #d1ecf1;
        padding: 12px 16px;
        border-radius: 5px;
        font-size: 0.95rem;
        text-align: center;
    }

    .text-muted {
        color: #6c757d;
        font-size: 0.8rem;
        margin-top: 5px;
    }

    .empty-state {
        text-align: center;
        padding: 40px 20px;
    }

    @@media (max-width: 768px) {
        .header

    {
        flex-direction: column;
        align-items: stretch;
    }

    .crianca-grid {
        grid-template-columns: 1fr;
    }

    .filtros {
        flex-direction: column;
        align-items: flex-start;
        gap: 10px;
    }

    }
</style>

<div class="container">
    <div class="header">
        <div>
            <h1>
                @if (isAdmin)
                {
                    <span>👨‍⚕️ Gerenciar Crianças</span>
                    @if (!string.IsNullOrEmpty(responsavelNome))
                    {
                        <br>
                
                        <small style="font-size: 0.7em; opacity: 0.9;">Responsável: @responsavelNome</small>
                    }
                }
                else
                {
                    <span>👶 Minhas Crianças</span>
                }
            </h1>
        </div>
        <div class="header-buttons">
            @if (isAdmin)
            {
                @if (ViewBag.ResponsavelId != null)
                {
                    <a href="/Perfil/CadastrarCrianca?responsavelId=@ViewBag.ResponsavelId" class="btn btn-info">➕ Adicionar</a>
                    <a href="/Perfil/MinhasCriancas" class="btn btn-secondary">📋 Ver Todas</a>
                }
                else
                {
                    <a href="/Perfil/CadastrarCrianca" class="btn btn-info">➕ Adicionar</a>
                    <a href="/Admin" class="btn btn-secondary">⬅️ Painel</a>
                }
            }
            else
            {
                <a href="/Perfil/CadastrarCrianca" class="btn btn-info">➕ Adicionar Criança</a>
            }
        </div>
    </div>

    @if (TempData["Sucesso"] != null)
    {
        <div style="background: #d4edda; color: #155724; padding: 15px; border-radius: 5px; margin-bottom: 20px;">
            @TempData["Sucesso"]
        </div>
    }

    @if (TempData["Erro"] != null)
    {
        <div style="background: #f8d7da; color: #721c24; padding: 15px; border-radius: 5px; margin-bottom: 20px;">
            @TempData["Erro"]
        </div>
    }

    @if (Model != null && Model.Any())
    {
        <div class="filtros">
            <strong>Filtrar:</strong>
            <label>
                <input type="radio" name="filtroStatus" value="todas" checked onchange="filtrarCriancas(this.value)">
                Todas
            </label>
            <label>
                <input type="radio" name="filtroStatus" value="ativas" onchange="filtrarCriancas(this.value)">
                Ativas
            </label>
            <label>
                <input type="radio" name="filtroStatus" value="inativas" onchange="filtrarCriancas(this.value)">
                Inativas
            </label>
        </div>

        <div class="crianca-grid">
            @foreach (var crianca in Model)
            {
                <div class="crianca-card @(crianca.Ativa ? "" : "inativa")" data-status="@(crianca.Ativa ? "ativa" : "inativa")">
                    <div class="crianca-content">
                        <h3 class="crianca-header @(crianca.Ativa ? "" : "inativa")">
                            @crianca.Nome
                            <span class="status-badge @(crianca.Ativa ? "status-ativa" : "status-inativa")">
                                @(crianca.Ativa ? "ATIVA" : "INATIVA")
                            </span>
                        </h3>

                        @if (isAdmin && crianca.Responsavel != null)
                        {
                            <div class="crianca-info"><strong>Responsável:</strong> @crianca.Responsavel.Nome</div>
                        }
                        <div class="crianca-info"><strong>Parentesco:</strong> @crianca.Parentesco</div>
                        <div class="crianca-info"><strong>Nascimento:</strong> @crianca.DataNascimento.ToString("dd/MM/yyyy") (@(DateTime.Now.Year - crianca.DataNascimento.Year) anos)</div>
                        <div class="crianca-info"><strong>CPF:</strong> @crianca.Cpf</div>
                    </div>

                    <div class="crianca-actions">
                        <a href="/Perfil/DetalhesCrianca/@crianca.Id" class="btn btn-primary">👁️ Ver</a>
                        <a href="/Odontograma/PorCrianca/@crianca.Id" class="btn btn-info">🦷 Odontograma</a>

                        @if (crianca.Ativa)
                        {
                            <a href="/Perfil/EditarCrianca/@crianca.Id" class="btn btn-warning">✏️ Editar</a>
                            @if (isAdmin || Model.Count(c => c.Ativa) > 1)
                            {
                                <button type="button" class="btn btn-danger"
                                        onclick="alterarStatusCrianca(@crianca.Id, '@crianca.Nome', false)">
                                    ❌ Desativar
                                </button>
                            }
                        }
                        else
                        {
                            <button type="button" class="btn btn-success"
                                    onclick="alterarStatusCrianca(@crianca.Id, '@crianca.Nome', true)">
                                ✅ Reativar
                            </button>
                        }
                    </div>

                    @if (!crianca.Ativa)
                    {
                        <div class="text-muted">Criança desativada</div>
                    }
                </div>
            }
        </div>

        <div class="summary">
            <strong>Total:</strong> @Model.Count() criança@(Model.Count() > 1 ? "s" : "")
            (@Model.Count(c => c.Ativa) ativa@(Model.Count(c => c.Ativa) > 1 ? "s" : ""), @Model.Count(c => !c.Ativa) inativa@(Model.Count(c => !c.Ativa) > 1 ? "s" : ""))
        </div>
    }
    else
    {
        <div class="empty-state">
            <div style="font-size: 3em; margin-bottom: 20px;">👶</div>
            @if (isAdmin)
            {
                @if (!string.IsNullOrEmpty(responsavelNome))
                {
                    <h2>Nenhuma criança cadastrada</h2>
                    <p>O responsável <strong>@responsavelNome</strong> ainda não tem crianças cadastradas.</p>
                    <a href="/Perfil/CadastrarCrianca?responsavelId=@ViewBag.ResponsavelId" class="btn btn-info" style="font-size: 1.1em; padding: 10px 20px;">
                        ➕ Cadastrar Primeira Criança
                    </a>
                }
                else
                {
                    <h2>Nenhuma criança no sistema</h2>
                    <p>Não há crianças cadastradas no sistema.</p>
                    <a href="/Perfil/CadastrarCrianca" class="btn btn-info" style="font-size: 1.1em; padding: 10px 20px;">
                        ➕ Cadastrar Primeira Criança
                    </a>
                }
            }
            else
            {
                <h2>Nenhuma criança cadastrada</h2>
                <p>Você ainda não tem crianças cadastradas em sua conta.</p>
                <a href="/Perfil/CadastrarCrianca" class="btn btn-info" style="font-size: 1.1em; padding: 10px 20px;">
                    ➕ Cadastrar Primeira Criança
                </a>
            }
        </div>
    }

    <div style="margin-top: 25px; padding-top: 15px; border-top: 1px solid #eee; text-align: center;">
        @if (isAdmin)
        {
            <a href="/Admin" class="btn btn-secondary">⬅️ Voltar ao Painel Admin</a>
        }
        else
        {
            <a href="/Perfil" class="btn btn-secondary">⬅️ Voltar ao Perfil</a>
        }
    </div>
</div>

@section Scripts {
    <script>
        function alterarStatusCrianca(id, nome, ativar) {
            const acao = ativar ? 'reativar' : 'desativar';
            const mensagem = ativar
                ? `Tem certeza que deseja reativar a criança "${nome}"?`
                : `Tem certeza que deseja desativar a criança "${nome}"?\n\nA criança será mantida no sistema mas ficará inativa.`;

            if (confirm(mensagem)) {
                fetch('/Perfil/AlterarStatusCrianca', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/x-www-form-urlencoded',
                        'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]')?.value || ''
                    },
                    body: `id=${id}&ativar=${ativar}`
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        alert(data.message);
                        location.reload();
                    } else {
                        alert(data.message);
                    }
                })
                .catch(error => {
                    console.error('Erro:', error);
                    alert(`Erro ao ${acao} criança.`);
                });
            }
        }

        function filtrarCriancas(filtro) {
            const cards = document.querySelectorAll('.crianca-card');

            cards.forEach(card => {
                const status = card.getAttribute('data-status');

                switch(filtro) {
                    case 'ativas':
                        card.style.display = status === 'ativa' ? 'block' : 'none';
                        break;
                    case 'inativas':
                        card.style.display = status === 'inativa' ? 'block' : 'none';
                        break;
                    case 'todas':
                    default:
                        card.style.display = 'block';
                        break;
                }
            });
        }
    </script>
}