<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Entrar - Casa Espírita Trabalhadores de Jesus</title>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
    <style>
        :root {
            --cor-primaria: #4A90E2;
            --cor-secundaria: #66BB6A;
            --cor-accent: #FFD700;
            --cor-paz: #E3F2FD;
            --cor-esperanca: #E8F5E8;
            --cor-texto: #2C3E50;
            --cor-texto-suave: #5D6D7E;
            --cor-amor: #FF6B8A;
        }

        body {
            font-family: 'Poppins', sans-serif;
            background: linear-gradient(135deg, var(--cor-paz) 0%, var(--cor-esperanca) 100%);
            min-height: 100vh;
            position: relative;
            overflow-x: hidden;
            margin: 0;
            padding: 0;
        }

        body::before {
            content: '';
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><defs><pattern id="hearts" patternUnits="userSpaceOnUse" width="25" height="25"><path d="M12.5,8 C9,4 5,8 8,12.5 C12.5,17 17,12.5 20,8 C17,4 12.5,8 12.5,8" fill="rgba(255,215,0,0.05)"/></pattern></defs><rect width="100" height="100" fill="url(%23hearts)"/></svg>') repeat;
            animation: float 30s infinite linear;
            z-index: -1;
        }

        @@keyframes float {
            0% {
                transform: translateX(0) translateY(0);
            }
            100% {
                transform: translateX(-25px) translateY(-25px);
            }
        }

        .login-container {
            padding: 1rem 0;
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .login-card {
            background: white;
            border-radius: 20px;
            box-shadow: 0 15px 40px rgba(0,0,0,0.15);
            overflow: hidden;
            border: none;
            backdrop-filter: blur(10px);
            position: relative;
            width: 100%;
            /* Larguras responsivas mais generosas */
            max-width: 600px; /* Aumentado de 500px */
        }

        .login-card::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            height: 4px;
            background: linear-gradient(135deg, var(--cor-primaria), var(--cor-secundaria), var(--cor-accent));
        }

        .card-header-custom {
            background: linear-gradient(135deg, var(--cor-primaria), var(--cor-secundaria));
            color: white;
            text-align: center;
            padding: 1.5rem 2rem 1.2rem; /* Padding aumentado */
            position: relative;
            overflow: hidden;
        }

        .card-header-custom::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><circle cx="20" cy="20" r="2" fill="rgba(255,255,255,0.1)"/><circle cx="80" cy="80" r="2" fill="rgba(255,255,255,0.1)"/><circle cx="50" cy="10" r="1" fill="rgba(255,255,255,0.1)"/></svg>') repeat;
        }

        .welcome-subtitle {
            opacity: 0.9;
            font-weight: 300;
            font-size: 0.9rem; /* Ligeiramente aumentado */
            position: relative;
            z-index: 2;
            line-height: 1.2;
        }

        .card-body-custom {
            padding: 2rem 2.5rem 2rem; /* Padding generoso */
        }

        .form-label-custom {
            font-weight: 500;
            color: var(--cor-texto);
            margin-bottom: 0.5rem;
            display: flex;
            align-items: center;
            font-size: 0.95rem; /* Ligeiramente maior */
        }

        .form-label-custom i {
            color: var(--cor-primaria);
            margin-right: 0.5rem;
            width: 16px; /* Aumentado */
            font-size: 0.9rem;
        }

        .form-control-custom {
            border: 2px solid #e9ecef;
            border-radius: 12px;
            padding: 0.8rem 1.2rem; /* Padding aumentado */
            font-size: 1rem; /* Aumentado */
            transition: all 0.3s ease;
            background: #fafbfc;
        }

        .form-control-custom:focus {
            border-color: var(--cor-primaria);
            box-shadow: 0 0 15px rgba(74, 144, 226, 0.2);
            background: white;
            transform: translateY(-1px);
            outline: none;
        }

        .btn-login {
            background: linear-gradient(135deg, var(--cor-secundaria), var(--cor-amor));
            border: none;
            border-radius: 12px;
            padding: 1rem 2rem; /* Padding aumentado */
            font-weight: 600;
            font-size: 1.1rem; /* Aumentado */
            color: white;
            transition: all 0.3s ease;
            box-shadow: 0 6px 20px rgba(102, 187, 106, 0.3);
        }

        .btn-login:hover {
            transform: translateY(-2px);
            box-shadow: 0 10px 30px rgba(102, 187, 106, 0.4);
            color: white;
        }

        .btn-back {
            background: transparent;
            border: 2px solid var(--cor-primaria);
            color: var(--cor-primaria);
            border-radius: 12px;
            padding: 0.8rem 1.5rem; /* Padding aumentado */
            font-weight: 500;
            transition: all 0.3s ease;
            font-size: 0.95rem;
        }

        .btn-back:hover {
            background: var(--cor-primaria);
            color: white;
            transform: translateY(-1px);
            box-shadow: 0 6px 20px rgba(74, 144, 226, 0.3);
        }

        .form-check-custom {
            margin: 1.2rem 0; /* Margem aumentada */
        }

        .form-check-input-custom {
            border-radius: 5px;
            border: 2px solid #dee2e6;
            width: 1.2em; /* Ligeiramente aumentado */
            height: 1.2em;
        }

        .form-check-input-custom:checked {
            background-color: var(--cor-secundaria);
            border-color: var(--cor-secundaria);
        }

        .form-check-label-custom {
            font-size: 0.9rem; /* Aumentado */
            color: var(--cor-texto-suave);
            margin-left: 0.5rem;
        }

        .link-cadastro {
            color: var(--cor-primaria);
            text-decoration: none;
            font-weight: 600;
            transition: all 0.3s ease;
        }

        .link-cadastro:hover {
            color: var(--cor-secundaria);
            text-decoration: underline;
        }

        .link-esqueceu-senha {
            color: var(--cor-amor);
            text-decoration: none;
            font-weight: 500;
            font-size: 0.9rem; /* Ligeiramente aumentado */
            transition: all 0.3s ease;
            display: inline-flex;
            align-items: center;
            gap: 0.3rem;
        }

        .link-esqueceu-senha:hover {
            color: var(--cor-primaria);
            text-decoration: underline;
            transform: translateY(-1px);
        }

        .link-esqueceu-senha i {
            font-size: 0.8rem;
        }

        .text-muted-custom {
            color: var(--cor-texto-suave);
            font-size: 0.85rem; /* Ligeiramente aumentado */
        }

        .alert-danger-custom {
            background: #fff5f5;
            border: 1px solid #feb2b2;
            color: #c53030;
            border-radius: 12px;
            padding: 1rem 1.2rem; /* Padding aumentado */
            margin-bottom: 1.2rem;
            font-size: 0.9rem;
        }

        .alert-success-custom {
            background: #f0fff4;
            border: 1px solid #9ae6b4;
            color: #276749;
            border-radius: 12px;
            padding: 1rem 1.2rem; /* Padding aumentado */
            margin-bottom: 1.2rem;
            font-size: 0.9rem;
        }

        .mb-3 {
            margin-bottom: 1rem !important; /* Aumentado */
        }

        .mb-4 {
            margin-bottom: 1.3rem !important; /* Aumentado */
        }

        .fade-in {
            opacity: 0;
            transform: translateY(20px);
            animation: fadeInUp 0.6s ease forwards;
        }

        .fade-in-delay-1 {
            animation-delay: 0.1s;
        }

        .fade-in-delay-2 {
            animation-delay: 0.3s;
        }

        .fade-in-delay-3 {
            animation-delay: 0.5s;
        }

        @@keyframes fadeInUp {
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        /* Otimizações para diferentes tamanhos de tela */
        
        /* Telas muito grandes (4K, ultrawide) */
        @@media (min-width: 1920px) {
            .login-card {
                max-width: 800px; /* Ainda mais largo */
            }
            
            .card-body-custom {
                padding: 2.5rem 3rem 2.5rem;
            }
            
            .welcome-title {
                font-size: 1.6rem;
            }
            
            .form-control-custom {
                padding: 1rem 1.4rem;
                font-size: 1.1rem;
            }
            
            .btn-login {
                padding: 1.2rem 2.5rem;
                font-size: 1.2rem;
            }
        }
        
        /* Telas grandes (Desktop padrão) */
        @@media (min-width: 1200px) and (max-width: 1919px) {
            .login-card {
                max-width: 700px; /* Mais largo que antes */
            }
            
            .card-body-custom {
                padding: 2.2rem 2.8rem 2.2rem;
            }
            
            .welcome-title {
                font-size: 1.5rem;
            }
            
            .form-control-custom {
                padding: 0.9rem 1.3rem;
                font-size: 1.05rem;
            }
        }

        /* Telas médias (Laptops) */
        @@media (min-width: 992px) and (max-width: 1199px) {
            .login-card {
                max-width: 600px; /* Mantido mais largo */
            }
            
            .card-body-custom {
                padding: 2rem 2.5rem 2rem;
            }
        }
        
        /* Tablets landscape */
        @@media (min-width: 768px) and (max-width: 991px) {
            .login-card {
                max-width: 550px; /* Aproveita melhor o espaço */
            }
            
            .card-body-custom {
                padding: 1.8rem 2.2rem 1.8rem;
            }
        }

        /* Responsividade Mobile - mantida como estava */
        @@media (max-width: 767px) {
            .login-container {
                padding: 0.5rem;
                align-items: flex-start;
                padding-top: 2rem;
            }

            .login-card {
                max-width: 100%;
                margin: 0 auto;
            }

            .card-body-custom {
                padding: 1.5rem 1.2rem;
            }

            .card-header-custom {
                padding: 1.5rem 1.2rem 1.2rem;
            }

            .welcome-title {
                font-size: 1.3rem;
            }

            .welcome-subtitle {
                font-size: 0.9rem;
            }

            .form-control-custom {
                padding: 0.7rem 1rem;
                font-size: 0.95rem;
            }

            .btn-login {
                padding: 0.8rem 1.5rem;
                font-size: 1rem;
            }

            .btn-back {
                padding: 0.6rem 1.2rem;
                font-size: 0.9rem;
            }
        }

        @@media (max-width: 480px) {
            .login-container {
                padding: 0.25rem;
                padding-top: 1rem;
            }

            .card-body-custom {
                padding: 1.2rem 1rem;
            }

            .card-header-custom {
                padding: 1.2rem 1rem 1rem;
            }
        }

        /* Ajustes para altura da tela */
        @@media (min-height: 800px) {
            .login-container {
                min-height: 100vh;
            }
        }
        
        /* Ajuste especial para telas widescreen */
        @@media (min-aspect-ratio: 16/9) {
            .login-card {
                max-width: 650px;
            }
        }
    </style>
</head>
<body>
    <div class="login-container">
        <div class="container-fluid">
            <div class="row justify-content-center">
                <!-- Classes Bootstrap ajustadas para larguras maiores -->
                <div class="col-12 col-sm-10 col-md-8 col-lg-6 col-xl-5 col-xxl-4">
                    <div class="login-card card shadow-lg fade-in">
                        <div class="card-header-custom">
                            <p class="welcome-subtitle mb-0">
                                Casa Espírita Trabalhadores de Jesus
                            </p>
                            <small class="welcome-subtitle" style="opacity: 0.7; font-size: 0.8rem;">
                                Recupere seu acesso!
                            </small>
                        </div>

                        <div class="card-body-custom">
                            <!-- Mensagens do TempData (Backend) -->
                            @if (TempData["SuccessMessage"] != null)
                            {
                                <div class="alert alert-success-custom" id="tempSuccessMessage">
                                    <i class="fas fa-check-circle me-2"></i>
                                    @TempData["SuccessMessage"]
                                </div>
                            }

                            @if (TempData["ErrorMessage"] != null)
                            {
                                <div class="alert alert-danger-custom" id="tempErrorMessage">
                                    <i class="fas fa-exclamation-circle me-2"></i>
                                    @TempData["ErrorMessage"]
                                </div>
                            }

                            <!-- Mensagens de validação do ModelState -->
                            @if (!ViewData.ModelState.IsValid && ViewData.ModelState[""]?.Errors.Count > 0)
                            {
                                <div class="alert alert-danger-custom">
                                    <i class="fas fa-exclamation-triangle me-2"></i>
                                    @foreach (var error in ViewData.ModelState[""].Errors)
                                    {
                                        <div>@error.ErrorMessage</div>
                                    }
                                </div>
                            }

                            <!-- Mensagem de sucesso do JavaScript (para modal) -->
                            <div id="successMessage" class="alert alert-success-custom" style="display: none;">
                                <i class="fas fa-check-circle me-2"></i>
                                <span id="successText"></span>
                            </div>

                            <form id="loginForm" class="fade-in fade-in-delay-1" method="post" action="/Login">
                                <div id="validationErrors" class="alert alert-danger-custom" style="display: none;"></div>

                                <div class="mb-4">
                                    <label for="email" class="form-label-custom">
                                        <i class="fas fa-envelope"></i>
                                        Email
                                    </label>
                                    <input type="email" id="email" name="Email" class="form-control form-control-custom"
                                           placeholder="seu@email.com" value="@(Model?.Email ?? "")" required />
                                    <span class="text-danger small" id="email-error">
                                        @Html.ValidationMessage("Email")
                                    </span>
                                </div>

                                <div class="mb-3">
                                    <label for="senha" class="form-label-custom">
                                        <i class="fas fa-lock"></i>
                                        Senha
                                    </label>
                                    <input type="password" id="senha" name="Senha" class="form-control form-control-custom"
                                           placeholder="Sua senha" required />
                                    <span class="text-danger small" id="senha-error">
                                        @Html.ValidationMessage("Senha")
                                    </span>
                                </div>

                                <div class="text-end mb-3">
                                    <a href="#" class="link-esqueceu-senha" data-bs-toggle="modal" data-bs-target="#forgotPasswordModal">
                                        <i class="fas fa-key"></i>
                                        Esqueceu sua senha?
                                    </a>
                                </div>

                                <div class="form-check-custom">
                                    <input type="checkbox" id="lembrarMe" name="LembrarMe" class="form-check-input form-check-input-custom" 
                                           @(Model?.LembrarMe == true ? "checked" : "") />
                                    <label for="lembrarMe" class="form-check-label form-check-label-custom">
                                        <i class="fas fa-heart" style="color: var(--cor-amor); font-size: 0.75rem; margin-right: 0.25rem;"></i>
                                        Lembrar-me por 30 dias
                                    </label>
                                </div>

                                <div class="d-grid gap-2 mb-4">
                                    <button type="submit" class="btn btn-login btn-lg">
                                        <i class="fas fa-sign-in-alt me-2"></i>
                                        Entrar
                                    </button>
                                </div>

                                <div class="text-center">
                                    <small class="text-muted-custom">
                                        <i class="fas fa-user-plus me-1" style="color: var(--cor-accent);"></i>
                                        Ainda não faz parte da família?
                                        <a href="#" class="link-cadastro">Cadastre-se aqui</a>
                                    </small>
                                </div>
                            </form>
                        </div>
                    </div>

                    <div class="text-center mt-3 fade-in fade-in-delay-2">
                        <a href="#" class="btn btn-back">
                            <i class="fas fa-arrow-left me-2"></i>
                            Voltar ao Início
                        </a>
                    </div>

                    <div class="text-center mt-2 fade-in fade-in-delay-3">
                        <small class="text-muted-custom" style="line-height: 1.4;">
                            <i class="fas fa-quote-left me-1"></i>
                            "Resgatamos vidas e fazemos acreditar que existe sempre um caminho melhor"
                            <i class="fas fa-quote-right ms-1"></i>
                        </small>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Modal Esqueceu a Senha -->
    <div class="modal fade" id="forgotPasswordModal" tabindex="-1" aria-labelledby="forgotPasswordModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered modal-md"> <!-- Aumentado de modal-sm para modal-md -->
            <div class="modal-content" style="border-radius: 20px; border: none; box-shadow: 0 15px 40px rgba(0,0,0,0.15);">
                <div class="modal-header" style="background: linear-gradient(135deg, var(--cor-primaria), var(--cor-secundaria)); color: white; border-radius: 20px 20px 0 0; border: none; padding: 1.5rem 1.5rem 1.2rem;">
                    <h5 class="modal-title" id="forgotPasswordModalLabel" style="font-weight: 600; display: flex; align-items: center; font-size: 1.2rem;">
                        <i class="fas fa-key me-2" style="color: var(--cor-accent);"></i>
                        Recuperar Senha
                    </h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close" style="filter: brightness(0) invert(1);"></button>
                </div>
                <div class="modal-body" style="padding: 2rem 1.8rem;"> <!-- Padding aumentado -->
                    <form id="forgotPasswordForm" method="post" action="/EsqueceuSenha">
                        @Html.AntiForgeryToken()
                        <div class="text-center mb-4"> <!-- Margem aumentada -->
                            <i class="fas fa-heart" style="font-size: 2.2rem; color: var(--cor-amor); margin-bottom: 1rem;"></i>
                            <p class="text-muted-custom" style="font-size: 0.95rem; line-height: 1.5;">
                                <strong>Não se preocupe!</strong><br>
                                Vamos te ajudar a recuperar o acesso.
                                Digite seu email e enviaremos as instruções.
                            </p>
                        </div>

                        <div class="mb-4"> <!-- Margem aumentada -->
                            <label class="form-label-custom">
                                <i class="fas fa-envelope"></i>
                                Email Cadastrado
                            </label>
                            <input type="email" id="forgotEmail" name="email" class="form-control form-control-custom"
                                   placeholder="Digite seu email" required />
                            <span class="text-danger small" id="forgot-email-error"></span>
                        </div>

                        <div class="d-grid gap-2">
                            <button type="submit" class="btn btn-login">
                                <i class="fas fa-paper-plane me-2"></i>
                                Enviar Instruções
                            </button>
                        </div>

                        <div class="text-center mt-3"> <!-- Margem aumentada -->
                            <small class="text-muted-custom">
                                <i class="fas fa-info-circle me-1" style="color: var(--cor-primaria);"></i>
                                Verifique sua caixa de entrada e spam
                            </small>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/js/bootstrap.bundle.min.js"></script>
    <script>
        // Animação de entrada dos elementos
        const observerOptions = {
            threshold: 0.1,
            rootMargin: '0px 0px -10px 0px'
        };

        const observer = new IntersectionObserver(function(entries) {
            entries.forEach(entry => {
                if (entry.isIntersecting) {
                    entry.target.style.animationPlayState = 'running';
                }
            });
        }, observerOptions);

        document.querySelectorAll('.fade-in').forEach(element => {
            element.style.animationPlayState = 'paused';
            observer.observe(element);
        });

        // Auto-hide das mensagens TempData após 5 segundos
        document.addEventListener('DOMContentLoaded', function() {
            const tempSuccess = document.getElementById('tempSuccessMessage');
            const tempError = document.getElementById('tempErrorMessage');
            
            if (tempSuccess) {
                setTimeout(() => {
                    tempSuccess.style.transition = 'opacity 0.5s ease';
                    tempSuccess.style.opacity = '0';
                    setTimeout(() => tempSuccess.style.display = 'none', 500);
                }, 5000);
            }
            
            if (tempError) {
                setTimeout(() => {
                    tempError.style.transition = 'opacity 0.5s ease';
                    tempError.style.opacity = '0';
                    setTimeout(() => tempError.style.display = 'none', 500);
                }, 5000);
            }

            const emailInput = document.querySelector('input[type="email"]');
            if (emailInput) {
                emailInput.focus();
            }
        });

        // Efeito de digitação suave
        document.querySelectorAll('.form-control-custom').forEach(input => {
            input.addEventListener('focus', function() {
                this.parentElement.style.transform = 'translateY(-1px)';
                this.parentElement.style.transition = 'transform 0.3s ease';
            });

            input.addEventListener('blur', function() {
                this.parentElement.style.transform = 'translateY(0)';
            });
        });

        // Foco no campo email quando modal abrir
        document.getElementById('forgotPasswordModal').addEventListener('shown.bs.modal', function () {
            const modalEmailInput = this.querySelector('input[type="email"]');
            if (modalEmailInput) {
                modalEmailInput.focus();
            }
        });

        // Validação e submissão do formulário de login
        document.getElementById('loginForm').addEventListener('submit', function(e) {
            // Não prevenir o comportamento padrão - deixar o form ser submetido normalmente para o ASP.NET Core
            // e.preventDefault();
            
            // Limpar apenas os erros de JavaScript
            document.getElementById('email-error').textContent = '';
            document.getElementById('senha-error').textContent = '';
            document.getElementById('validationErrors').style.display = 'none';
            
            const email = document.getElementById('email').value;
            const senha = document.getElementById('senha').value;
            let isValid = true;
            let errors = [];
            
            // Validar email
            if (!email) {
                document.getElementById('email-error').textContent = 'Email é obrigatório';
                errors.push('Email é obrigatório');
                isValid = false;
            } else if (!isValidEmail(email)) {
                document.getElementById('email-error').textContent = 'Email inválido';
                errors.push('Email inválido');
                isValid = false;
            }
            
            // Validar senha
            if (!senha) {
                document.getElementById('senha-error').textContent = 'Senha é obrigatória';
                errors.push('Senha é obrigatória');
                isValid = false;
            }
            
            if (!isValid) {
                e.preventDefault(); // Só prevenir se houver erro de validação
                const errorDiv = document.getElementById('validationErrors');
                errorDiv.innerHTML = errors.map(error => `<div>${error}</div>`).join('');
                errorDiv.style.display = 'block';
                return false;
            }
            
            // Se chegou até aqui, é válido - deixar o form ser submetido
            return true;
        });

        // Submissão do formulário de esqueceu senha
        document.getElementById('forgotPasswordForm').addEventListener('submit', function(e) {
            // Não prevenir o comportamento padrão - deixar o form ser submetido normalmente
            // e.preventDefault();
            
            // Limpar erros anteriores
            document.getElementById('forgot-email-error').textContent = '';
            
            const email = document.getElementById('forgotEmail').value;
            let isValid = true;
            
            // Validar email
            if (!email) {
                document.getElementById('forgot-email-error').textContent = 'O email é obrigatório';
                isValid = false;
            } else if (!isValidEmail(email)) {
                document.getElementById('forgot-email-error').textContent = 'Digite um email válido';
                isValid = false;
            }
            
            if (!isValid) {
                e.preventDefault(); // Só prevenir se houver erro
                return false;
            }
            
            // Se chegou até aqui, é válido - deixar o form ser submetido
            const submitBtn = this.querySelector('button[type="submit"]');
            const originalText = submitBtn.innerHTML;

            // Desabilitar botão e mostrar carregamento
            submitBtn.disabled = true;
            submitBtn.innerHTML = '<i class="fas fa-spinner fa-spin me-2"></i>Enviando...';
            
            return true;
        });

        // Função para validar email
        function isValidEmail(email) {
            const emailRegex = /^[a-zA-Z0-9._%+-]+@@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/;
            return emailRegex.test(email);
        }

        // Adicionar classes de animação quando os elementos estão visíveis
        document.addEventListener('DOMContentLoaded', function() {
            const formGroups = document.querySelectorAll('.fade-in');
            formGroups.forEach((group, index) => {
                group.style.animationDelay = `${0.1 * (index + 1)}s`;
            });
        });
    </script>
</body>
</html>